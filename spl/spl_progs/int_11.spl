//Process synchronization syscalls


alias userSP R0; 
alias physicalPageNum R1;
alias offset R2;
alias Addr R3;
alias sysCallNumber R4;
alias reqPid R5;
alias physicalAddrRetVal R6;
alias i R7;

//switching to kernel stack

userSP=SP; 
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP; 
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1; 


physicalPageNum = [PTBR + 2 * ((userSP - 5)/ 512)];
offset = (userSP - 5) % 512;
Addr = (physicalPageNum * 512) + offset;

sysCallNumber=[Addr];

if(sysCallNumber==11) then //get pid system call

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 11; 

	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = [PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE+1] + 1];

	SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	ireturn;

endif;

if(sysCallNumber==12) then //get ppid system call

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 12; 

	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = [PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE+1] + 2];

	SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	ireturn;

endif;

if(sysCallNumber==13) then //wait system call

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 13; //Setting mode flag 
	
	//PID is stored as argument 1(Extracting PID from user stack)
	physicalPageNum = [PTBR + 2 * ((userSP - 4)/ 512)];
	offset = (userSP - 4) % 512;
	Addr = (physicalPageNum * 512) + offset;
	reqPid=[Addr];


//invalid condition
	if(reqPid<0 || reqPid>=16 || reqPid==[SYSTEM_STATUS_TABLE+1] || [PROCESS_TABLE+reqPid*16+4]==TERMINATED) then
		
		physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
		[physicalAddrRetVal] = -1;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
		SP = userSP;

		ireturn;
	endif;

	[PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 4] = WAIT_PROCESS;
	[PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 5] = reqPid;

	backup;
		call MOD_5;//scheduler
	restore;

	
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = 0;

	SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	ireturn;

endif;

if(sysCallNumber==14) then //Signal 

	//Setting mode flag
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 14;

	i=0;
	while(i<=15) do
		if ([PROCESS_TABLE + i*16 + 4]==WAIT_PROCESS && [PROCESS_TABLE + i*16 + 5]==[SYSTEM_STATUS_TABLE+1]) then
				[PROCESS_TABLE + i*16 + 4]=READY;
		endif;
		i=i+1;
	endwhile;

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

	physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	[physicalAddrRetVal] = 0;

	SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	ireturn;

endif;