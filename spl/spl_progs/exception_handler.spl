//EXCEPTION HANDLER

print "excdeption";

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=-1 ;// exception Mode
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;

backup;


if(EC==1)then //illegal instruction
    print "Illeg_Instr";
    backup;
    R1=3;
    R2=[SYSTEM_STATUS_TABLE+1];
    call MOD_1;
    restore;
    call MOD_5;
endif;

if(EC==2)then //illegal memory access
    print "illeg_mem_acc";
    backup;
    R1=3;
    R2=[SYSTEM_STATUS_TABLE+1];
    call MOD_1;
    restore;
    call MOD_5;
endif;

if(EC==3)then //arithmetic exception
    print "arith_excp";
    backup;
    R1=3;
    R2=[SYSTEM_STATUS_TABLE+1];
    call MOD_1;
    restore;
    call MOD_5;
endif;

if(EC==0)then //page fault

    if(EPN==4 || EPN==5 || EPN==6 || EPN==7)then //code page fault
        backup;
        R1=5; //get code page function
        R2=[SYSTEM_STATUS_TABLE+1];
        R3=[DISK_MAP_TABLE+10*[SYSTEM_STATUS_TABLE+1]*EPN];
        call MOD_2;
        [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN]=R0;
        [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN+1]="1100";
        restore;
    endif;

    if(EPN==2||EPN==3)then //heap page fault
        backup;
        R1=1;//get free page
        call MOD_2;
        [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN]=R0;
        [PAGE_TABLE_BASE+[SYSTEM_STATUS_TABLE+1]*20+2*EPN+1]="1110";
        restore;
    endif;

endif;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0; //Setting mode flag back to 0

restore;

SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13];

ireturn;